//==========================================================
// Nikki Shore
// QVN - Visual novel system
//
// Based on code by Ral22 (StoneshipMapper)
// http://forum.zdoom.org/viewtopic.php?f=37&t=38215&p=724983 
//
// Code by CRxTRDude.
//==========================================================

#library "qvn"
#include "zcommon.acs"
#import "qcommon.acs"

// Everything here is defined in 640x480
// If you need recalc, just check template.

#define NAME_BOUNDX 7
#define NAME_BOUNDY 312
#define NAME_BOUNDW 149
#define NAME_BOUNDH 17

#define DIAL_BOUNDX 61
#define DIAL_BOUNDY 345
#define DIAL_BOUNDW	489
#define DIAL_BOUNDH 119

#define CTC_X		453.0
#define CTC_Y		358.0

#define PORT_Y 240.0
//Centered portrait
#define PORT_C_X 240.0
//Two portrait mode
#define PORTA_L_X 200.0
#define PORTA_R_X 420.0
//Three portrait mode (the center portrait mode included)
#define PORTB_L_X 140.0
#define PORTB_R_X 490.0

#define TXTSPD 0.2 //Text Speed

global str 5:VN_name;
global str 6:VN_dialogue;
global str 7:VN_choice[];
global int 8:VN_CurrentChoice;
global int 9:VN_CurrentState; //0-defaultdialog, 1-radiodialog, 2-choice

int isVNActive, isVNDisplayed;

Function void VN_Initialize (void){
	//Set all variables that the system uses
	VN_CurrentState = 0;
	isVNDisplayed = False;
}

Script "VN_Update" (void){
	If(isVNActive){
		pressed = False;
		ACS_NamedExecute("VN_Draw",0);
		Log(s:"Waiting for key input ...");		
		ACS_NamedExecute("VN_KeyInput",0);
		While(!pressed){
			delay(1);
		}
		ACS_NamedTerminate("VN_KeyInput",0);
		
		ACS_NamedExecute("VN_KeyCatcher",0);	
	}
}

Script "VN_Parser" (int D){
	int lng = StrParam(l:D);
	str nm;
	str dialg;       
	int dialglen;
	if (!nm){
		nm = StrLeft(lng, 4);
    dialglen = StrLen(lng)-5;
		dialg = StrRight(lng, dialglen);		
	}
	if (nm == "_PLY") nm = "VNCH_PLYR";
	else nm = StrParam(s:"VNCH_",s:nm);
	
	log(s:"nm is ", s:nm);
	log(s:"dlalglen is ", i:dialglen);
	log(s:"dialg is", s:dialg);
	
	//VN_name - a language string grabbed from Language.vn
	VN_name = nm;
	//VN_dialogue - a plain string grabbed from a language string
	//with the format VND_[Level]_[Dialog] found in Language.vn
	VN_dialogue = dialg; 
}

Script "VN_Draw" (void){
	 int namex = 82.0;
   int namey = 320.0;
   //int dialogx = 30.0;
   //int dialogy = 405.0;
   int dialogx = 63.1;
   int dialogy = 344.1;
   
   //10-22
   If(VN_CurrentState != 2){
   		SetHudSize(640, 480, 1);
			If(VN_CurrentState == 1){
				//Radio, mini portraits, using font QPORTR
				//Reason using font is it could be
				//translated in HudMessage
				//See monalisa example
				//This also displays the 'Now Receiving' sign too
				log(s:"Displaying radio");
				SetFont("vn_rec");
				HudMessage(s:"A"; HUDMSG_PLAIN, 20, 0, 320.0, 240.0, 0.0);
				ACS_NamedExecuteWait("VN_Parser",0,"VNR_1_1"); 				
			}Else{
				//Dialog, full portraits. This could be just graphics
				//from the graphics folder.
				log(s:"Displaying default");
				ACS_NamedExecuteWait("VN_Parser",0,"VND_1_1"); 
			}
			
			//Text box
			SetHudClipRect(0, 0, 0, 0, 0);
			SetHudSize(512,384,1);
			//ClickToContinue Icon
			SetFont("m_skull1");
			HudMessage(s:"A"; HUDMSG_PLAIN, 19, 0, CTC_X, CTC_Y, 0.0);
						
			//BG			
			SetHudSize(640, 480, 1);
			SetFont("vn_intfc");
			HudMessage(s:"A"; HUDMSG_PLAIN|HUDMSG_ALPHA, 21, 0, 320.0, 240.0, 0.0, 0.8);

			//Text Elements
			SetFont("Smallfont");			
			//'Speaking'
			HudMessage(s:"S P E A K I N G  ..."; HUDMSG_PLAIN, 17, CR_WHITE, 550.0, 320.0, 0.0);
			SetFont("Bigfont");
			//Name
			SetHudClipRect(NAME_BOUNDX, NAME_BOUNDY, NAME_BOUNDW, NAME_BOUNDH, NAME_BOUNDW);
			HudMessage(l:VN_name; HUDMSG_PLAIN, 14, CR_WHITE, namex, namey, 0.0);
			//Dialog
			SetHudClipRect(DIAL_BOUNDX, DIAL_BOUNDY, DIAL_BOUNDW, DIAL_BOUNDH, DIAL_BOUNDW);
			HudMessage(s:VN_dialogue; HUDMSG_PLAIN, 18, CR_WHITE, dialogx, dialogy, 0.0);
			
	 }Else{
		//Choices	 
	 }
}

Script "VN_KeyInput" (void){
  	int buttons;
    pressed = FALSE;
    //See qobjectives for details
}

Script "VN_KeyCatcher" (void){
	if (isVNActive){
		Delay(10);
		ACS_NamedExecute("VN_Update",0);
	}
}

//Function void VN_Dialogue(int text, int po1, int po2, int po3, int current){
//	
//}

//Function void VN_Choice(int choice1, int choice2, int choice3, int default){
//
//}

Script "VN_Stop" (void){

}