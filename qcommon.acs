//==========================================================
// Nikki Shore
// QCommon - Nikki Shore specific game files.
//
// Common scripts
//
// Code by CRxTRDude.
//==========================================================

#library "qcommon"
#include "zcommon.acs"

#define TICUNIT         35.725

function void Mechanical_Lift (int sector, int min, int max, int spd)
{
    int floor = GetSectorFloorZ (sector, 0, 0);
    int value = max-min;
    int floorint = floor >> 16;
    
    print (s:"min ", d:min, s:" max ", d:max, s:" value ", d:value, s:"floor (in int) ", d:floorint);
    
    if (floorint == min){
        FloorAndCeiling_RaiseByValue(sector,spd,value);
    }
    else if (floorint == max){
        FloorAndCeiling_LowerByValue(sector,spd,value);
    }
}
function void TunnelVision (int time)
{
		SetFont("VIGNA0");
		SetHudSize(320,240,FALSE);
		if (time > 0){
    	HudMessage(s:"A"; HUDMSG_FADEINOUT|HUDMSG_ALPHA|HUDMSG_NOTWITHFULLMAP|HUDMSG_NOTWITHOVERLAYMAP|HUDMSG_LAYER_UNDERHUD, 0, 0, 0.5, 0.5, time, 0.2, 0.2, 0.8);	
    }else{
			Print(s:"TunnelVision only works on 1 and above");	
		}
    SetHudSize(0,0,FALSE);
}
function int HudMessageTime(int type, int length, int typetime, int staytime, int fadetime)
{
   Switch(type)
   {
   Case HUDMSG_PLAIN:
      return FixedMul(staytime, TICUNIT) >> 16;
   Case HUDMSG_FADEOUT:
      return FixedMul(staytime + fadetime, TICUNIT) >> 16;
   Case HUDMSG_TYPEON:
      return FixedMul(FixedMul(typetime, length << 16) + staytime + fadetime, TICUNIT) >> 16;
   Case HUDMSG_FADEINOUT:
      return FixedMul(typetime + staytime + fadetime, TICUNIT) >> 16;
   }
   return 0;
}